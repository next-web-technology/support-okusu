name: CI Angular
on:
  pull_request:
jobs:
  ci-angular-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run lint
  ci-angular-admin-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run build admin
  ci-angular-lp-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run build lp
  ci-angular-web-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run build web
  ci-angular-shared-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run build shared
  ci-angular-admin-unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run test:admin:ci
  ci-angular-lp-unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run test:lp:ci
  ci-angular-web-unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run test:web:ci
  ci-angular-shared-unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run test:shared:ci
  ci-angular-admin-build-storybook:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run build-storybook:admin
  ci-angular-lp-build-storybook:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run build-storybook:lp
  ci-angular-web-build-storybook:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run build-storybook:web
  ci-angular-shared-build-storybook:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - run: npm ci
      - run: npm run build-storybook:shared
  ci-angular-admin-e2e-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git checkout ${{ github.head_ref }} && git pull
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - name: install fonts-noto
        run: sudo apt install fonts-noto
      - run: npm ci
      - run: npm run e2e:admin:ci
      - name: upload cypress downloads as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: admin-cypress-downloads
          path: cypress/downloads
      - name: upload cypress videos as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: admin-cypress-videos
          path: cypress/videos
      - name: upload cypress screenshots as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: admin-cypress-screenshots
          path: cypress/screenshots
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_TEST }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_TEST }}
      - name: Recover regconfig.admin.json
        env:
          REGCONFIG: ${{ secrets.REGCONFIG_ADMIN }}
        run: echo -n "$REGCONFIG" | base64 --decode > regconfig.admin.json
      - run: npm run reg-suit:admin:run
  ci-angular-lp-e2e-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git checkout ${{github.head_ref}} && git pull
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - name: install fonts-noto
        run: sudo apt install fonts-noto
      - run: npm ci
      - run: npm run e2e:lp:ci
      - name: upload cypress downloads as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lp-cypress-downloads
          path: cypress/downloads
      - name: upload cypress videos as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lp-cypress-videos
          path: cypress/videos
      - name: upload cypress screenshots as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lp-cypress-screenshots
          path: cypress/screenshots
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_TEST }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_TEST }}
      - name: Recover regconfig.lp.json
        env:
          REGCONFIG: ${{ secrets.REGCONFIG_LP }}
        run: echo -n "$REGCONFIG" | base64 --decode > regconfig.lp.json
      - run: npm run reg-suit:lp:run
  ci-angular-web-e2e-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git checkout ${{ github.head_ref }} && git pull
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - name: install fonts-noto
        run: sudo apt install fonts-noto
      - run: npm ci
      - run: npm run e2e:web:ci
      - name: upload cypress downloads as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: web-cypress-downloads
          path: cypress/downloads
      - name: upload cypress videos as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: web-cypress-videos
          path: cypress/videos
      - name: upload cypress screenshots as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: web-cypress-screenshots
          path: cypress/screenshots
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_TEST }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_TEST }}
      - name: Recover regconfig.web.json
        env:
          REGCONFIG: ${{ secrets.REGCONFIG_WEB }}
        run: echo -n "$REGCONFIG" | base64 --decode > regconfig.web.json
      - run: npm run reg-suit:web:run
  ci-angular-shared-e2e-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git checkout ${{ github.head_ref }} && git pull
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
      - name: install fonts-noto
        run: sudo apt install fonts-noto
      - run: npm ci
      - run: npm run e2e:shared:ci
      - name: upload cypress downloads as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: shared-cypress-downloads
          path: cypress/downloads
      - name: upload cypress videos as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: shared-cypress-videos
          path: cypress/videos
      - name: upload cypress screenshots as artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: shared-cypress-screenshots
          path: cypress/screenshots
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_TEST }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_TEST }}
      - name: Recover regconfig.shared.json
        env:
          REGCONFIG: ${{ secrets.REGCONFIG_SHARED }}
        run: echo -n "$REGCONFIG" | base64 --decode > regconfig.shared.json
      - run: npm run reg-suit:shared:run
